{
  "info": {
    "name": "Multi-Product Learning API",
    "description": "Complete API test collection for the Multi-Product Learning Platform",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "auth": {
    "type": "bearer",
    "bearer": [
      {
        "key": "token",
        "value": "{{accessToken}}",
        "type": "string"
      }
    ]
  },
  "variable": [
    {
      "key": "baseUrl",
      "value": "http://localhost:3000",
      "type": "string"
    },
    {
      "key": "accessToken",
      "value": "",
      "type": "string"
    },
    {
      "key": "refreshToken",
      "value": "",
      "type": "string"
    },
    {
      "key": "userId",
      "value": "",
      "type": "string"
    },
    {
      "key": "productId",
      "value": "",
      "type": "string"
    },
    {
      "key": "topicId",
      "value": "",
      "type": "string"
    },
    {
      "key": "qnaId",
      "value": "",
      "type": "string"
    },
    {
      "key": "quizId",
      "value": "",
      "type": "string"
    }
  ],
  "item": [
    {
      "name": "Health Check",
      "item": [
        {
          "name": "Root Endpoint",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/",
              "host": ["{{baseUrl}}"],
              "path": [""]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Response has success field', function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('success');",
                  "    pm.expect(jsonData.success).to.be.true;",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Health Endpoint",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/health",
              "host": ["{{baseUrl}}"],
              "path": ["health"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Health check returns healthy status', function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData.status).to.eql('healthy');",
                  "});"
                ]
              }
            }
          ]
        }
      ]
    },
    {
      "name": "Authentication",
      "item": [
        {
          "name": "Register User",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Test User\",\n  \"email\": \"testuser@example.com\",\n  \"password\": \"TestPass123!\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/v1/auth/register",
              "host": ["{{baseUrl}}"],
              "path": ["api", "v1", "auth", "register"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Registration successful', function () {",
                  "    pm.response.to.have.status(201);",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData.success).to.be.true;",
                  "    ",
                  "    // Save tokens",
                  "    pm.collectionVariables.set('accessToken', jsonData.data.accessToken);",
                  "    pm.collectionVariables.set('refreshToken', jsonData.data.refreshToken);",
                  "    pm.collectionVariables.set('userId', jsonData.data.user.id);",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Login User",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"testuser@example.com\",\n  \"password\": \"TestPass123!\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/v1/auth/login",
              "host": ["{{baseUrl}}"],
              "path": ["api", "v1", "auth", "login"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Login successful', function () {",
                  "    pm.response.to.have.status(200);",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData.success).to.be.true;",
                  "    ",
                  "    pm.collectionVariables.set('accessToken', jsonData.data.accessToken);",
                  "    pm.collectionVariables.set('refreshToken', jsonData.data.refreshToken);",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Refresh Token",
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"refreshToken\": \"{{refreshToken}}\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/v1/auth/refresh",
              "host": ["{{baseUrl}}"],
              "path": ["api", "v1", "auth", "refresh"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Token refresh successful', function () {",
                  "    pm.response.to.have.status(200);",
                  "    var jsonData = pm.response.json();",
                  "    pm.collectionVariables.set('accessToken', jsonData.data.accessToken);",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Logout User",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"refreshToken\": \"{{refreshToken}}\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/v1/auth/logout",
              "host": ["{{baseUrl}}"],
              "path": ["api", "v1", "auth", "logout"]
            }
          }
        }
      ]
    },
    {
      "name": "Products",
      "item": [
        {
          "name": "Get All Products",
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/v1/products",
              "host": ["{{baseUrl}}"],
              "path": ["api", "v1", "products"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Products retrieved', function () {",
                  "    pm.response.to.have.status(200);",
                  "    var jsonData = pm.response.json();",
                  "    if (jsonData.data.length > 0) {",
                  "        pm.collectionVariables.set('productId', jsonData.data[0].id);",
                  "    }",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Get Product Topics",
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/v1/products/{{productId}}/topics",
              "host": ["{{baseUrl}}"],
              "path": ["api", "v1", "products", "{{productId}}", "topics"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Topics retrieved', function () {",
                  "    pm.response.to.have.status(200);",
                  "    var jsonData = pm.response.json();",
                  "    if (jsonData.data.length > 0) {",
                  "        pm.collectionVariables.set('topicId', jsonData.data[0].id);",
                  "    }",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Get Q&A",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/v1/products/{{productId}}/qna?page=1&limit=5",
              "host": ["{{baseUrl}}"],
              "path": ["api", "v1", "products", "{{productId}}", "qna"],
              "query": [
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "limit",
                  "value": "5"
                }
              ]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Q&A retrieved', function () {",
                  "    pm.response.to.have.status(200);",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('pagination');",
                  "    if (jsonData.data.length > 0) {",
                  "        pm.collectionVariables.set('qnaId', jsonData.data[0].id);",
                  "    }",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Get Q&A by Company (Amazon)",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/v1/products/{{productId}}/qna?company=amazon&page=1&limit=5",
              "host": ["{{baseUrl}}"],
              "path": ["api", "v1", "products", "{{productId}}", "qna"],
              "query": [
                {
                  "key": "company",
                  "value": "amazon"
                },
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "limit",
                  "value": "5"
                }
              ]
            }
          }
        },
        {
          "name": "Get Quizzes",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/v1/products/{{productId}}/quizzes",
              "host": ["{{baseUrl}}"],
              "path": ["api", "v1", "products", "{{productId}}", "quizzes"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Quizzes retrieved', function () {",
                  "    pm.response.to.have.status(200);",
                  "    var jsonData = pm.response.json();",
                  "    if (jsonData.data.length > 0) {",
                  "        pm.collectionVariables.set('quizId', jsonData.data[0].id);",
                  "    }",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Submit Quiz Answer",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"selectedAnswer\": \"Array\",\n  \"timeTaken\": 30\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/v1/products/{{productId}}/quizzes/{{quizId}}/submit",
              "host": ["{{baseUrl}}"],
              "path": ["api", "v1", "products", "{{productId}}", "quizzes", "{{quizId}}", "submit"]
            }
          }
        },
        {
          "name": "Get PDFs",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/v1/products/{{productId}}/pdfs",
              "host": ["{{baseUrl}}"],
              "path": ["api", "v1", "products", "{{productId}}", "pdfs"]
            }
          }
        }
      ]
    },
    {
      "name": "User",
      "item": [
        {
          "name": "Get Profile",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/v1/users/profile",
              "host": ["{{baseUrl}}"],
              "path": ["api", "v1", "users", "profile"]
            }
          }
        },
        {
          "name": "Update Profile",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Updated Test User\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/v1/users/profile",
              "host": ["{{baseUrl}}"],
              "path": ["api", "v1", "users", "profile"]
            }
          }
        },
        {
          "name": "Get Stats",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/v1/users/stats",
              "host": ["{{baseUrl}}"],
              "path": ["api", "v1", "users", "stats"]
            }
          }
        },
        {
          "name": "Get Progress",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/v1/users/progress",
              "host": ["{{baseUrl}}"],
              "path": ["api", "v1", "users", "progress"]
            }
          }
        },
        {
          "name": "Update Progress",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"topicId\": \"{{topicId}}\",\n  \"completionPercent\": 75,\n  \"score\": 85.5\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/v1/users/progress",
              "host": ["{{baseUrl}}"],
              "path": ["api", "v1", "users", "progress"]
            }
          }
        },
        {
          "name": "Get Bookmarks",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/v1/users/bookmarks",
              "host": ["{{baseUrl}}"],
              "path": ["api", "v1", "users", "bookmarks"]
            }
          }
        },
        {
          "name": "Add Bookmark",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"qnaId\": \"{{qnaId}}\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/v1/users/bookmarks",
              "host": ["{{baseUrl}}"],
              "path": ["api", "v1", "users", "bookmarks"]
            }
          }
        }
      ]
    },
    {
      "name": "Admin",
      "item": [
        {
          "name": "Grant Product Access",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"userId\": \"{{userId}}\",\n  \"productId\": \"{{productId}}\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/v1/admin/users/grant-product-access",
              "host": ["{{baseUrl}}"],
              "path": ["api", "v1", "admin", "users", "grant-product-access"]
            }
          }
        },
        {
          "name": "Revoke Product Access",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"userId\": \"{{userId}}\",\n  \"productId\": \"{{productId}}\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/v1/admin/users/revoke-product-access",
              "host": ["{{baseUrl}}"],
              "path": ["api", "v1", "admin", "users", "revoke-product-access"]
            }
          }
        }
      ]
    }
  ]
}